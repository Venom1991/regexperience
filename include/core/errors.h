#ifndef REGEXPERIENCE_ERRORS_H
#define REGEXPERIENCE_ERRORS_H

typedef enum
{
  CORE_REGEXPERIENCE_ERROR_UNDEFINED = 0,
  CORE_REGEXPERIENCE_ERROR_REGULAR_EXPRESSION_NOT_COMPILED,
  CORE_REGEXPERIENCE_ERROR_INPUT_NULL,
  CORE_REGEXPERIENCE_ERROR_INPUT_NOT_ASCII,
  CORE_REGEXPERIENCE_N_ERRORS
} CoreRegexperienceError;

typedef enum
{
  LEXICAL_ANALYSIS_LEXER_ERROR_UNDEFINED = CORE_REGEXPERIENCE_N_ERRORS,
  LEXICAL_ANALYSIS_LEXER_ERROR_INPUT_NULL,
  LEXICAL_ANALYSIS_LEXER_ERROR_INPUT_NOT_ASCII,
  LEXICAL_ANALYSIS_LEXER_N_ERRORS
} LexicalAnalysisLexerError;

typedef enum
{
  SYNTACTIC_ANALYSIS_PARSER_ERROR_UNDEFINED = LEXICAL_ANALYSIS_LEXER_N_ERRORS,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_UNEXPECTED_CHARACTER,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_DANGLING_ALTERNATION_OPERATOR,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_DANGLING_QUANTIFICATION_OPERATOR,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_DANGLING_RANGE_OPERATOR,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_DANGLING_METACHARACTER_ESCAPE,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_UNMATCHED_OPEN_PARENTHESIS,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_UNMATCHED_CLOSE_PARENTHESIS,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_UNMATCHED_OPEN_BRACKET,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_UNEXPECTED_START_ANCHOR,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_UNEXPECTED_END_ANCHOR,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_UNEXPECTED_EMPTY_EXPRESSION,
  SYNTACTIC_ANALYSIS_PARSER_ERROR_EMPTY_BRACKET_EXPRESSION,
  SYNTACTIC_ANALYSIS_PARSER_N_ERRORS
} SyntacticAnalysisParserError;

typedef enum
{
  SEMANTIC_ANALYSIS_RANGE_ERROR_INVALID_VALUES = SYNTACTIC_ANALYSIS_PARSER_N_ERRORS
} SemanticAnalysisAnalyzerError;

#endif /* REGEXPERIENCE_ERRORS_H */
